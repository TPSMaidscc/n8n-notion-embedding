name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the already running and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies (if any)
        run: |
          # Only install if package.json exists
          if [ -f package.json ]; then
            npm ci
          else
            echo "No package.json found, skipping npm install"
          fi

      - name: Create API key injection script
        run: |
          cat > inject_key.sh << 'EOF'
          #!/bin/bash
          if [ -z "$N8N_API_KEY" ]; then
            echo "❌ ERROR: N8N_API_KEY environment variable is not set"
            exit 1
          fi
          
          # Create a backup
          cp index.html index.html.backup
          
          # Use sed with a different delimiter to avoid issues with special characters
          sed "s|__N8N_API_KEY__|$N8N_API_KEY|g" index.html.backup > index.html
          
          echo "✅ API key injection completed"
          EOF
          chmod +x inject_key.sh

      - name: Inject API Key into HTML
        env:
          N8N_API_KEY: ${{ secrets.N8N_API_KEY }}
        run: |
          # Debug: Check if secret is available and show length
          if [ -z "$N8N_API_KEY" ]; then
            echo "❌ ERROR: N8N_API_KEY secret is not available"
            echo "Please check that the secret is set in Repository Settings -> Secrets and variables -> Actions"
            exit 1
          fi
          
          echo "🔑 API key length: ${#N8N_API_KEY} characters"
          echo "🔑 API key starts with: ${N8N_API_KEY:0:10}..."
          
          # Debug: Show placeholder before replacement
          echo "🔍 Checking for placeholder in index.html:"
          grep -n "__N8N_API_KEY__" index.html || echo "No placeholder found"
          
          # Run the injection script
          ./inject_key.sh
          
          # Add timestamp to force cache refresh
          TIMESTAMP=$(date +%s)
          echo "<!-- Build timestamp: $TIMESTAMP -->" >> index.html
          echo "🕐 Added timestamp: $TIMESTAMP"
          
          # Debug: Show what actually got replaced
          echo "🔍 Checking index.html after replacement:"
          grep -n "this.apiKey" index.html | head -3
          
          # Verify the replacement worked
          if grep -q "__N8N_API_KEY__" index.html; then
            echo "❌ ERROR: Placeholder __N8N_API_KEY__ still found in index.html"
            echo "📄 Lines containing the placeholder:"
            grep -n "__N8N_API_KEY__" index.html
            echo "This means the API key injection failed!"
            exit 1
          else
            echo "✅ API key successfully injected into index.html"
            echo "🔑 API key now starts with: $(grep "this.apiKey = " index.html | head -1 | cut -d"'" -f2 | cut -c1-10)..."
          fi

      - name: Verify files before upload
        run: |
          echo "📁 Files in current directory:"
          ls -la
          echo "🔍 Final verification - API key in index.html:"
          grep -n "this.apiKey" index.html | head -2
          echo "📦 File that will be uploaded:"
          head -170 index.html | tail -20

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
